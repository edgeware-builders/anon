//! Autogenerated weights for pallet_mixer
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 3.0.0
//! DATE: 2021-02-16, STEPS: [10, ], REPEAT: 4, LOW RANGE: [], HIGH RANGE: []
//! CHAIN: Some("dev"), DB, CACHE: 128

// Executed Command:
// ./target/release/node-template
// benchmark
// --chain
// dev
// --pallet
// pallet_mixer
// --extrinsic
// deposit
// --steps
// 10
// --repeat
// 4
// --output
// ./pallets/mixer/src/

#![allow(unused_parens)]
#![allow(unused_imports)]

use crate::Config;
use frame_support::{
	traits::Get,
	weights::{constants::RocksDbWeight, Weight},
};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_mixer.
pub trait WeightInfo {
	fn deposit(n: u32) -> Weight;
	fn withdraw() -> Weight;
}

/// Weight functions for pallet_mixer.
/// For use in production
pub struct Weights<T>(PhantomData<T>);
impl<T: frame_system::Config + Config> WeightInfo for Weights<T> {
	fn deposit(d: u32) -> Weight {
		(349_126_333_000 as Weight)
			// Standard Error: 2_814_732_000
			.saturating_add((50_593_339_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(8 as Weight))
			.saturating_add(T::DbWeight::get().writes(5 as Weight))
	}

	fn withdraw() -> Weight {
		(1_135_814_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(9 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
}

// Implementation used for development
impl WeightInfo for () {
	fn deposit(d: u32) -> Weight {
		(349_126_333_000 as Weight)
			// Standard Error: 2_814_732_000
			.saturating_add((50_593_339_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(RocksDbWeight::get().reads(8 as Weight))
			.saturating_add(RocksDbWeight::get().writes(5 as Weight))
	}

	fn withdraw() -> Weight {
		(1_135_814_000_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(9 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
}
